<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>Ca joc de tactică first-person shooter, Terra Nova se concentrează pe bătălii şi ia loc, prin ochii privitorului, într-un spaţiu cu grafică tridimensională. Protagonistul poartă o armură puternică de luptă, care are posibilitatea să localizeze şi ţintească inamici din raza sa vizuală. Aceasta conţine, de asemenea, un propulsor de zbor (utilizabil în mod limitat), raze infra-roşu şi viziune la depărtare, respectiv un scut de protecție reîncărcabil care te poate proteja de atacuri. Jucătorul foloşeste un mouse pentru a utiliza armele şi pentru a manipula interfata HUD (heads-up display). Pe ecranul calculatorului apar informaţii tactice, cum ar fi meniul de comandă al echipei, hărţile şi statisticile armelor.

În general, jucătorul este acompaniat de mai mult de trei personaje artificiale pe care îi poate îndruma din punct de vedere tactic; de exemplu, le poate ordona să formeze o poziţie de atac sau de apărare (în spatele unor obiecte), respectiv să se năpustească asupra inamicului. Coechipierii pot fi controlaţi ca grup sau ca indivizi când li se dă o comanda. Fiecare membru al echipei este specializat în arme, recunoaștere, reparări, demolări SAU electronică. Cei care fac parte dintr-una din aceste 4 categorii pot primi comenzi speciale, cum ar fi repararea armurii unui alt membru din echipa sau fixarea explozibilului într-un anumit loc. În timpul misiunilor, persoanjele îţi vor trimite, prin unde radio, informaţii despre poziţia inamicilor şi statusul luptei.
</value>
  </data>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Acţiunea din Terra Nova este localizată în sistemul solar Alpha Centauri, în anul 2327, şi aparţine genului ştiinţifico-fantastic. Inspiratia principală a toposului este reprezentată de nuvelele „Starship Troopers”, respectiv „The Forever War”, iar revista PC Gamer (UK) îl campară cu filmul de acţiune Aliens (1986). Cu 200 de ani înainte de începerea jocului, Pământul era asuprit de unitatea de guvernamant numită Hegemony. Antagoniştii trimit colonii prin Sistemul Solar, dar locuitorii satelitilor lui Jupiter cad de comun acord să se întoarcă în sistemul Alpha Centauri, unde se stabilesc pe planetele NewHope, respectiv Thatcher. Imigranţii se divid in 12 clanuri-fiecare cu forţa militară  ("Strike Force") care să-i ajute să se apere de bandiţi- şi astfel creează Consiliul Centauri pentru a guverna sistemul. Comerțul este stabilit cu Hegemony. Când jocul începe, o forță de elită numită Strike Force Centauri se formează ca răspuns la creșterea activității piraţilor.</value>
  </data>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>Terra Nova: Strike Force Centauri s-a remarcat prin bătăliile pe echipe desfăşurate într-un univers tridimensional, complex, lucru rar văzut până în anul 1996. Deşi studioul Looking Glass făcuse greşeli la vremea respectivă, a reuşit să scoată lucrurile la bun sfârşit şi să aducă pe piaţă un produs muncit, cu mecanici şi un design ştiinţifico-fantastic frumos, la rândul său fiind apreciat de către comunitate mai târziu.</value>
  </data>
</root>